openapi: 3.0.3
info:
  title: Citcom Peritaje AI Report Service
  version: 1.0.0
  description: |
    External AI service that generates diagnostic reports based on inspection request data.
    This service receives complete request information including property details, damages, and photos,
    and returns a professionally formatted PDF report with AI-generated analysis and recommendations.
servers:
  - url: https://ai.peritaje.citcom.es/v1
    description: Production AI Service
  - url: https://staging-ai.peritaje.citcom.es/v1
    description: Staging AI Service
  - url: http://localhost:4000/v1
    description: Local development
tags:
  - name: Synchronous Reports
    description: Synchronous report generation - returns PDF immediately.
  - name: Asynchronous Reports
    description: Asynchronous report generation - queue, poll, and download.
security:
  - apiKeyAuth: []
paths:
  /reports/generate:
    post:
      tags: [Synchronous Reports]
      summary: Generate an AI diagnostic report (synchronous).
      description: |
        Processes inspection request data and generates a comprehensive diagnostic PDF report synchronously.
        The request waits until the AI completes the analysis and returns the PDF directly.
      operationId: generateAiReportSync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportGenerationRequest'
      responses:
        '200':
          description: Report successfully generated.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /reports/generate-async:
    post:
      tags: [Asynchronous Reports]
      summary: Generate an AI diagnostic report (asynchronous).
      description: |
        Queues an AI report generation request and returns immediately with a job identifier.
        Use the /reports/status/{reportId} endpoint to poll for completion status.
        Once completed, download the report using /reports/{reportId}.
      operationId: generateAiReportAsync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportGenerationRequest'
      responses:
        '202':
          description: Report generation queued successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncReportResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalError'
  /reports/status/{reportId}:
    get:
      tags: [Asynchronous Reports]
      summary: Check report generation status.
      description: |
        Retrieves the current status of an asynchronous report generation request.
        Use this endpoint to poll for completion when using async generation mode.
      operationId: getReportStatus
      parameters:
        - name: reportId
          in: path
          required: true
          description: Report generation job identifier.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Status retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStatusResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /reports/{reportId}:
    get:
      tags: [Asynchronous Reports]
      summary: Download a completed report.
      description: |
        Downloads the generated PDF report. Only available after the report status is 'completed'.
      operationId: downloadReport
      parameters:
        - name: reportId
          in: path
          required: true
          description: Report identifier.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Report delivered.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authenticating requests to the AI service.
  responses:
    BadRequest:
      description: The request payload is invalid or incomplete.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Authentication is required or the provided API key is invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: The referenced report was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UnprocessableEntity:
      description: The request data is valid but cannot be processed by the AI service.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalError:
      description: Unexpected error while processing the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServiceUnavailable:
      description: The AI service is temporarily unavailable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        traceId:
          type: string
          format: uuid
      required:
        - type
        - title
        - status
    ReportGenerationRequest:
      type: object
      properties:
        requestId:
          type: string
          format: uuid
          description: Unique identifier of the inspection request.
          example: '550e8400-e29b-41d4-a716-446655440000'
        property:
          $ref: '#/components/schemas/PropertyInput'
        applicant:
          $ref: '#/components/schemas/ApplicantInput'
        damages:
          type: array
          items:
            $ref: '#/components/schemas/DamageInput'
          minItems: 1
          description: List of reported damages with descriptions and photos.
        municipality:
          $ref: '#/components/schemas/MunicipalityInput'
        submittedAt:
          type: string
          format: date-time
          description: Timestamp when the request was submitted.
          example: '2025-01-15T10:30:00Z'
        notes:
          type: string
          nullable: true
          description: Additional notes provided by the applicant.
          example: 'Los daños se produjeron durante las lluvias torrenciales del pasado mes de octubre.'
      required:
        - requestId
        - property
        - applicant
        - damages
        - municipality
        - submittedAt
    AsyncReportResponse:
      type: object
      properties:
        reportId:
          type: string
          format: uuid
          description: Unique identifier for this report generation job.
          example: '7a8b9c0d-1e2f-3a4b-5c6d-7e8f9a0b1c2d'
        status:
          type: string
          enum:
            - pending
            - processing
          description: Initial status of the report generation job.
          example: 'pending'
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the job was created.
          example: '2025-01-15T10:35:00Z'
        statusUrl:
          type: string
          format: uri
          description: URL to check the status of this report generation job.
          example: 'https://ai.peritaje.citcom.es/v1/reports/status/7a8b9c0d-1e2f-3a4b-5c6d-7e8f9a0b1c2d'
        estimatedCompletionTime:
          type: integer
          nullable: true
          description: Estimated time in seconds for completion. Null if unknown.
          example: 120
      required:
        - reportId
        - status
        - createdAt
        - statusUrl
    PropertyInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '8f9a0b1c-2d3e-4f5a-6b7c-8d9e0f1a2b3c'
        name:
          type: string
          example: 'Vivienda Principal'
        type:
          type: string
          enum:
            - house
            - terraced_house
            - apartment
          description: Type of property.
          example: 'apartment'
        address:
          type: string
          example: 'Calle del Arenal 45, 2º A'
        municipality:
          type: string
          example: 'Valencia'
        postalCode:
          type: string
          example: '46001'
        province:
          type: string
          example: 'Valencia'
        cadastralReference:
          type: string
          example: '1234567VH1234N0001AB'
        isOwner:
          type: boolean
          description: Whether the applicant is the legal owner.
          example: true
      required:
        - id
        - name
        - type
        - address
        - municipality
        - postalCode
        - province
        - cadastralReference
        - isOwner
    ApplicantInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d'
        firstName:
          type: string
          example: 'Juan'
        lastName:
          type: string
          example: 'Pérez García'
        email:
          type: string
          format: email
          example: 'juan.perez@example.com'
        phoneNumber:
          type: string
          nullable: true
          example: '+34612345678'
      required:
        - id
        - firstName
        - lastName
        - email
    DamageInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '2b3c4d5e-6f7a-8b9c-0d1e-2f3a4b5c6d7e'
        scope:
          type: string
          enum:
            - common_elements
            - private_elements
          description: Whether the damage affects common or private elements.
          example: 'private_elements'
        name:
          type: string
          example: 'Grietas en pared del salón'
        category:
          type: string
          enum:
            - fence
            - pavement
            - outdoor_lighting
            - external_drainage_network
            - gardening
            - irrigation
            - outdoor_furniture
            - partitions
            - indoor_carpentry
            - wall_finishing
            - flooring
            - ceilings
            - electrical_installations
            - lighting_and_telecommunications
            - plumbing_and_sanitaryware
            - indoor_drainage_network
          example: 'wall_finishing'
        description:
          type: string
          example: 'Se observan grietas verticales en la pared del salón, con una longitud aproximada de 2 metros. Las grietas tienen un ancho de aproximadamente 5mm y van desde el techo hasta la mitad de la pared.'
        typology:
          type: string
          nullable: true
          description: Additional classification used in internal reports.
          example: 'structural'
        photos:
          type: array
          items:
            type: string
            format: uri
          description: Array of photo URLs for this damage.
          example:
            - 'https://storage.peritaje.citcom.es/photos/2b3c4d5e-6f7a-8b9c-0d1e-2f3a4b5c6d7e/photo1.jpg'
            - 'https://storage.peritaje.citcom.es/photos/2b3c4d5e-6f7a-8b9c-0d1e-2f3a4b5c6d7e/photo2.jpg'
      required:
        - id
        - scope
        - name
        - category
        - description
        - photos
    MunicipalityInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '3c4d5e6f-7a8b-9c0d-1e2f-3a4b5c6d7e8f'
        name:
          type: string
          example: 'Valencia'
        province:
          type: string
          example: 'Valencia'
      required:
        - id
        - name
        - province
    ReportStatusResponse:
      type: object
      properties:
        reportId:
          type: string
          format: uuid
          example: '7a8b9c0d-1e2f-3a4b-5c6d-7e8f9a0b1c2d'
        status:
          type: string
          enum:
            - pending
            - processing
            - completed
            - failed
          description: |
            Current status of the report generation:
            - pending: Request received, queued for processing
            - processing: AI is actively generating the report
            - completed: Report is ready for download
            - failed: Report generation failed
          example: 'completed'
        createdAt:
          type: string
          format: date-time
          example: '2025-01-15T10:35:00Z'
        completedAt:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the report was completed. Null if not yet completed.
          example: '2025-01-15T10:37:15Z'
        downloadUrl:
          type: string
          format: uri
          nullable: true
          description: URL to download the completed report. Null if not yet completed.
          example: 'https://ai.peritaje.citcom.es/v1/reports/7a8b9c0d-1e2f-3a4b-5c6d-7e8f9a0b1c2d'
        error:
          type: string
          nullable: true
          description: Error message if status is 'failed'.
          example: null
      required:
        - reportId
        - status
        - createdAt
